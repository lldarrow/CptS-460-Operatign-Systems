        .globl _diskr,_setes,_inces,_printf

                               !        4    6      8     10
_diskr:                        ! diskr(cyl, head, sector, buf)                 
        push  bp
	mov   bp,sp
	
        movb  dl, #0x00        ! drive 0=fd0 in DL
        movb  dh, 6[bp]        ! head        in DH
        movb  cl, 8[bp]        ! sector      in CL
        incb  cl               ! inc sector by 1 to suit BIOS
        movb  ch, 4[bp]        ! cyl         in CH
        mov   ax, #0x0202      ! (AH)=0x02=READ, (AL)=02 sectors
        mov   bx, 10[bp]       ! put buf value in BX ==> addr = [ES,BX]

!---------- call BIOS INT 0x13 ------------------------------------
        int  0x13              ! call BIOS to read the block 
!-----------------------------------------------------------------
        jb   error             ! to error if CarryBit is on [read failed]

	mov   sp,bp
	pop   bp
	ret

_setes:  push  bp              ! setes(segment): set ES to a segment        
	 mov   bp,sp
	
         mov   ax,4[bp]        
         mov   es,ax

	 mov   sp,bp
	 pop   bp
	 ret

_inces:                        ! inces() inc ES by 0x40, or 1K
         mov   ax,es
         add   ax,#0x40
         mov   es,ax
         ret

error:
        push #msg
