        OSSEG  = 0x1000
        _color = 420
       .globl _main,_running,_scheduler,_proc,_procSize  ! IMPORT
       .globl _tswitch,_getc,_putc
	
        jmpi   start,OSSEG

start:	mov  ax,cs
	mov  ds,ax
	mov  ss,ax

        mov  sp,#_proc
	add  sp,_procSize

	call _main
idle:	 jmp  idle
	
_tswitch:
SAVE:	
	push ax
	push bx
	push cx
	push dx
	push bp
	push si
	push di
	pushf
	mov  bx,_running
	mov  2[bx],sp

FIND:	call _scheduler

RESUME:
	mov  bx,_running
	mov  sp,2[bx]
	popf
	pop  di
	pop  si
	pop  bp
	pop  dx
	pop  cx
	pop  bx
	pop  ax

	ret

_getc:
    xorb ah, ah         ! clear ah
    int  0x16           ! call BIOS to get a char in AX
    andb al,#0x7F       ! 7-bit ascii
    ret

_putc:
    push bp
    mov  bp, sp
    movb al, 4[bp]      ! aL = char
    movb ah, #14        ! aH = 14
    mov  bx,_color      ! color to cyan
    int  0x10           ! call BIOS to display the char
    pop  bp
    ret
